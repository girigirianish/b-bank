variables:
  DIST_DIR: dist/angular-quality
  IMAGE: registry.heroku.com/prod-blood-bank/web

stages:
  - build
  - deploy-prod

build:
  stage: build
  image: node:latest
  script:
    - npm ci
    - npm run lint
    - npm run build-prod
  artifacts:
    paths:
      - dist/litmus-admin-ng

deploy-prod:
  stage: deploy-prod
  only:
    - master
  image: docker:stable
  services:
    - docker:dind
  variables:
  DOCKER_HOST: tcp://docker:2375/
   DOCKER_DRIVER: overlay
  before_script: ['cd blood-bank-ng']
  script:
    - docker build -t $IMAGE .
    - docker login --username=_ --password=$HEROKU_API_KEY_PROD registry.heroku.com
    - docker push $IMAGE
    - IMAGE_ID=$(docker inspect ${IMAGE} --format={{.Id}})
    - apk add curl
    - >
      curl -Ssl -X PATCH https://api.heroku.com/apps/prod-blood-bank/formation
      -d "{ \"updates\": [ {
        \"type\": \"web\",
        \"docker_image\": \"${IMAGE_ID}\" } ] }"
      -H "Content-Type: application/json"
      -H "Authorization: Bearer ${HEROKU_API_KEY_PROD}"
      -H "Accept: application/vnd.heroku+json; version=3.docker-releases"
  tags:
    - docker

deploy-dev-qa:
  stage: deploy-dev-qa
  only:
    - master
  image: docker:stable
  services:
    - docker:dind
  variables:
  DOCKER_HOST: tcp://docker:2375/
   DOCKER_DRIVER: overlay
  before_script: ['cd blood-bank-ng']
  script:
    - docker build -t $IMAGE .
    - docker login --username=_ --password=$HEROKU_API_KEY_DEV_QA registry.heroku.com
    - docker push $IMAGE
    - IMAGE_ID=$(docker inspect ${IMAGE} --format={{.Id}})
    - apk add curl
    - >
      curl -Ssl -X PATCH https://api.heroku.com/apps/prod-blood-bank/formation
      -d "{ \"updates\": [ {
        \"type\": \"web\",
        \"docker_image\": \"${IMAGE_ID}\" } ] }"
      -H "Content-Type: application/json"
      -H "Authorization: Bearer ${HEROKU_API_KEY_DEV_QA}"
      -H "Accept: application/vnd.heroku+json; version=3.docker-releases"
  tags:
    - docker
